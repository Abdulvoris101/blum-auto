from apps.accounts.managers import ProxyManagerfrom apps.accounts.models import Proxyfrom apps.accounts.scheme import ProxyCreateSchemefrom db.setup import AsyncSessionLocalclass ProxyDbUtils:    def __init__(self):        self.proxies = self.getCommonProxySchemes()    def getCommonProxySchemes(self):        proxies = [ProxyCreateScheme(telegramId=None, id="1111", ip="147.45.53.125", host="147.45.53.125", port=9160,                                     user="JJZXkw", password="bbh3Kv", type="socks5", dateEnd="2024-10-12 05:28:24",                                     isCommon=True, phoneCode=7, inUse=True),                   ProxyCreateScheme(telegramId=None, id="1111", ip="5.8.15.52", host="5.8.15.52", port=9438,                                     user="JJZXkw", password="bbh3Kv", type="socks5", dateEnd="2024-10-12 05:28:24",                                     isCommon=True, phoneCode=7, inUse=True),                   ProxyCreateScheme(telegramId=None, id="1111", ip="45.158.196.99", host="45.158.196.99", port=8000,                                     user="5FB556", password="rUZnwU", type="socks5", dateEnd="2024-10-12 05:28:24",                                     isCommon=True, phoneCode=234, inUse=True),                   ProxyCreateScheme(telegramId=None, id="1111", ip="168.81.73.188", host="168.81.73.188", port=8000,                                     user="Exer6L", password="4juKd9", type="socks5", dateEnd="2024-10-12 05:28:24",                                     isCommon=True, phoneCode=91, inUse=True),                   ProxyCreateScheme(telegramId=None, id="1111", ip="168.81.74.154", host="168.81.74.154", port=8000,                                     user="Exer6L", password="4juKd9", type="socks5", dateEnd="2024-10-12 05:28:24",                                     isCommon=True, phoneCode=91, inUse=True),                   ProxyCreateScheme(telegramId=None, id="1111", ip="45.131.214.16", host="45.131.214.16", port=8000,                                     user="AxTRuo", password="EVebsr", type="socks5", dateEnd="2024-10-12 05:28:24",                                     isCommon=True, phoneCode=20, inUse=True)                   ]        return proxies    async def dumpProxiesToDb(self):        for proxy in self.proxies:            isExists = await ProxyManager.isExistsByHostAndPort(host=proxy.host, port=proxy.port)            if not isExists:                proxy = Proxy(**proxy.model_dump())                await proxy.save()